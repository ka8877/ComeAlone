<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		<context:property-placeholder location="classpath:*.properties" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan base-package="com.kosmo.**" />
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/css/**" location="/css/" />							
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/includes/**" location="/includes/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/media/**" location="/media/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<!-- DBCP --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	<property name="dataSource" ref="kosmoDS"/> 
	<property name="configLocation" value="classpath:mybatis-context.xml"/> 
	<property name="mapperLocations" value="classpath:*Mapper.xml"/> 
	
	<!-- <property name="transactionFactory">
			<bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
		</property> -->
	</bean> 

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
	<constructor-arg ref="sqlSessionFactory"/> 
	</bean> 
	
	<!-- MapperInterface.java 사용 시 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kosmo.alone.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- datasource --> 
	<bean id="kosmoDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	    <property name="url" value="jdbc:oracle:thin:@192.168.0.16:1521:XE" />
	    <property name="username" value="comealone" />
	    <property name="password" value="1111" /> 
	</bean>
	
    <!--  transaction Manager-->
	<bean id="txManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="kosmoDS" />
	</bean>
	
<!-- 	<tx:annotation-driven transaction-manager="txManager"/> -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="cut" expression="execution(* com.kosmo.alone.*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
	</aop:config>
	
	<bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory"> 
		<constructor-arg value="1096716932477-e9hjd7pj0s9hqatvsk4gis0siliermkr.apps.googleusercontent.com" /> 
		<constructor-arg value="zoFsXTZM9p0oyTabQ6D-NXZn" /> 
	</bean> 
	
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters"> 
		<property name="scope" value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/plus.me https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/calendar"/> 
		<!-- <property name="scope" value="https://www.googleapis.com/auth/plus.me"/> --> 
		<property name="redirectUri" value="http://localhost/getOauthCode.do"/> 
		<property name="state" value="state_parameter_passthrough_value"/> 
	</bean>
	
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="10000000"/>
    	<property name="defaultEncoding" value="UTF-8"/>
    </bean>
    
    <!-- Tiles 3.x Setting TilesConfigurer는 스프링3.2 이상에서만... -->
	<bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 컨트롤러 없이 jsp 매핑(타일즈 적용) -->
<mvc:view-controller path="/*" />
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	    <property name="prefix" value="/" />
	    <property name="suffix" value=".jsp" />
	</bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	
</beans>
